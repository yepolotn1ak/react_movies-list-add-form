{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","useState","Math","random","toFixed","slice","id","inputErrorMessage","setInputErrorMessage","blurred","setBlurred","updateErrorMessage","newValue","trim","htmlFor","type","classNames","event","target","rest","currentTarget","onBlur","NewMovie","onAdd","count","setCount","submitDisabled","setSubmitDisabled","newMovie","setNewMovie","handleChange","prevMovie","onSubmit","preventDefault","prevCount","disabled","App","moviesFromServer","setMovies","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80a9ae75.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string;\n  value: string;\n  label?: string;\n  placeholder?: string;\n  required?: boolean;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nfunction generateRandomString() {\n  return Math.random().toFixed(16).slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${generateRandomString()}`);\n  const [inputErrorMessage, setInputErrorMessage] = useState('');\n  const [blurred, setBlurred] = useState(false);\n\n  const updateErrorMessage = (newValue: string) => {\n    setInputErrorMessage(() => {\n      if (name === 'description') {\n        return '';\n      }\n\n      if (required && !newValue) {\n        return `${label} is required`;\n      }\n\n      if (!newValue.trim()) {\n        return `${label} cannot be just spaces`;\n      }\n\n      return '';\n    });\n  };\n\n  const handleBlur = () => {\n    setBlurred(true);\n    updateErrorMessage(value);\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value: newValue, ...rest } = event.target;\n\n    updateErrorMessage(newValue);\n    onChange({ ...event, currentTarget: { ...rest, value: newValue } });\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          name={name}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': inputErrorMessage && blurred,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n      </div>\n\n      {blurred && inputErrorMessage && (\n        <p className=\"help is-danger\">\n          {inputErrorMessage}\n        </p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [submitDisabled, setSubmitDisabled] = useState(true);\n\n  const [newMovie, setNewMovie] = useState<Movie>({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  const {\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n    imdbId,\n  } = newMovie;\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    setNewMovie((prevMovie: Movie) => (\n      { ...prevMovie, [name]: value }\n    ));\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    onAdd({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    });\n\n    setNewMovie({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n\n    setSubmitDisabled(true);\n    setCount((prevCount) => prevCount + 1);\n  };\n\n  return (\n    <form\n      key={count}\n      className=\"NewMovie\"\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        required\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={(event) => {\n          handleChange(event);\n          setSubmitDisabled(\n            !event.target.value.trim()\n            || !imgUrl.trim()\n            || !imdbUrl.trim()\n            || !imdbId.trim(),\n          );\n        }}\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={handleChange}\n      />\n\n      <TextField\n        required\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={(event) => {\n          handleChange(event);\n          setSubmitDisabled(\n            !title.trim()\n            || !event.target.value.trim()\n            || !imdbUrl.trim()\n            || !imdbId.trim(),\n          );\n        }}\n      />\n\n      <TextField\n        required\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={(event) => {\n          handleChange(event);\n          setSubmitDisabled(\n            !title.trim()\n            || !imgUrl.trim()\n            || !event.target.value.trim()\n            || !imdbId.trim(),\n          );\n        }}\n      />\n\n      <TextField\n        required\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={(event) => {\n          handleChange(event);\n          setSubmitDisabled(\n            !title.trim()\n            || !imgUrl.trim()\n            || !imdbUrl.trim()\n            || !event.target.value.trim(),\n          );\n        }}\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={submitDisabled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport { Movie } from './types/Movie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>(moviesFromServer);\n\n  const addMovie = (newMovie: Movie) => {\n    setMovies(currentMovies => [...currentMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}